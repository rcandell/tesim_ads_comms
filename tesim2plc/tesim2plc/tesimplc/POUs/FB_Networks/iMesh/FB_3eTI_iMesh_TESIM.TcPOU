<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.0.36">
  <POU Name="FB_3eTI_iMesh_TESIM" Id="{d412dec1-cfad-4c24-9e0c-61a319435be1}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_3eTI_iMesh_TESIM EXTENDS FB_3eTI_iMesh_Base
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[

G_PARAMS.A_FLOW_MAX 		:=1.0;
G_PARAMS.D_FLOW_MAX			:=10000.0;
G_PARAMS.E_FLOW_MAX			:=10000.0;
G_PARAMS.AC_FLOW_MAX		:=500.0;
G_PARAMS.P_REACTOR_MAX		:=3000.0;

G_PARAMS.A_FLOW_MIN 		:=0.0;
G_PARAMS.D_FLOW_MIN			:=0.0;
G_PARAMS.E_FLOW_MIN			:=0.0;
G_PARAMS.AC_FLOW_MIN		:=0.0;
G_PARAMS.P_REACTOR_MIN		:=0.0;

// execute the signal conversion
SUPER^();

(*
//
// BEGIN PRODUCE THE DATA
//
// XMEAS values will come from the external TESIM program using ADS

// VOLTAGES
XMEAS_IO_VOUT[XMEAS_IO_IDX.A_FLOW]		:= pv_float_to_dac(pv:=XMEAS[XMEAS_IDX.A_FLOW],		pv_max:=G_PARAMS.A_FLOW_MAX, pv_min:=G_PARAMS.A_FLOW_MIN, dac_max:=VOUT_WD_MAX, dac_min:=0);
XMEAS_IO_VOUT[XMEAS_IO_IDX.D_FLOW]		:= pv_float_to_dac(pv:=XMEAS[XMEAS_IDX.D_FLOW],		pv_max:=G_PARAMS.D_FLOW_MAX, pv_min:=G_PARAMS.D_FLOW_MIN, dac_max:=VOUT_WD_MAX, dac_min:=0);
XMEAS_IO_VOUT[XMEAS_IO_IDX.E_FLOW]		:= pv_float_to_dac(pv:=XMEAS[XMEAS_IDX.E_FLOW],		pv_max:=G_PARAMS.E_FLOW_MAX, pv_min:=G_PARAMS.E_FLOW_MIN, dac_max:=VOUT_WD_MAX, dac_min:=0);
XMEAS_IO_VOUT[XMEAS_IO_IDX.P_REACTOR]	:= pv_float_to_dac(pv:=XMEAS[XMEAS_IDX.P_REACTOR],	pv_max:=G_PARAMS.P_REACTOR_MAX, pv_min:=G_PARAMS.P_REACTOR_MIN, dac_max:=VOUT_WD_MAX, dac_min:=0);


//
// BEGIN MODBUS POLLING SEGMENT from the GATEWAY
//
fbReadMB(addrs := mbAddrs );

// poll modbus registers
G_IO.MBS_XMEAS_RAW[XMEAS_MBS_IDX.A_FLOW] := fbReadMB.registerValues[XMEAS_MBS_IDX.A_FLOW] + MBS_XMEAS_CAL_OFFSET[1];
G_IO.MBS_XMEAS_RAW[XMEAS_MBS_IDX.D_FLOW] := fbReadMB.registerValues[XMEAS_MBS_IDX.D_FLOW]+ MBS_XMEAS_CAL_OFFSET[2];
G_IO.MBS_XMEAS_RAW[XMEAS_MBS_IDX.E_FLOW] := fbReadMB.registerValues[XMEAS_MBS_IDX.E_FLOW] + MBS_XMEAS_CAL_OFFSET[3];
G_IO.MBS_XMEAS_RAW[XMEAS_MBS_IDX.P_REACTOR] := fbReadMB.registerValues[XMEAS_MBS_IDX.P_REACTOR] + MBS_XMEAS_CAL_OFFSET[4];

// convert raw modbus signals to process signals
G_IO.MBS_XMEAS[XMEAS_MBS_IDX.A_FLOW]	:=	LREAL_TO_REAL(adc_to_float_pv(G_IO.MBS_XMEAS_RAW[XMEAS_MBS_IDX.A_FLOW],		pv_max:=G_PARAMS.A_FLOW_MAX, 		pv_min:=G_PARAMS.A_FLOW_MIN, 	i_max:=G_PARAMS.VOUT_MAX, i_min:=G_PARAMS.VOUT_MIN));
G_IO.MBS_XMEAS[XMEAS_MBS_IDX.D_FLOW]	:=	LREAL_TO_REAL(adc_to_float_pv(G_IO.MBS_XMEAS_RAW[XMEAS_MBS_IDX.D_FLOW],		pv_max:=G_PARAMS.D_FLOW_MAX, 		pv_min:=G_PARAMS.D_FLOW_MIN, 	i_max:=G_PARAMS.VOUT_MAX, i_min:=G_PARAMS.VOUT_MIN));
G_IO.MBS_XMEAS[XMEAS_MBS_IDX.E_FLOW]	:=	LREAL_TO_REAL(adc_to_float_pv(G_IO.MBS_XMEAS_RAW[XMEAS_MBS_IDX.E_FLOW],		pv_max:=G_PARAMS.E_FLOW_MAX, 		pv_min:=G_PARAMS.E_FLOW_MIN, 	i_max:=G_PARAMS.VOUT_MAX, i_min:=G_PARAMS.VOUT_MIN));
G_IO.MBS_XMEAS[XMEAS_MBS_IDX.P_REACTOR]	:=	LREAL_TO_REAL(adc_to_float_pv(G_IO.MBS_XMEAS_RAW[XMEAS_MBS_IDX.P_REACTOR],	pv_max:=G_PARAMS.P_REACTOR_MAX, 	pv_min:=G_PARAMS.P_REACTOR_MIN, i_max:=G_PARAMS.VOUT_MAX, i_min:=G_PARAMS.VOUT_MIN));


//
// END MODBUS POLLING SEGMENT from the GATEWAY
//
*)]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>